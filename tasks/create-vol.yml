# The ansible ec2_vol keep creating new one even the same vol with tag exists
# (might be the way aws is). Thus we list the vol to see if exists before
# creating

- include_tasks: "get-facts.yml"

- name: Set fact restore_snapshot_id if found the latest snapshot backup
  set_fact:
    restore_snapshot_id: "{{ get_snap_facts_out.snapshots.0.snapshot_id }}"
  when: get_snap_facts_out.snapshots

- block:
    - name: Remove old ec2 volumes
      ec2_vol:
        profile: "{{ profile|default(omit) }}"
        region: "{{ region|default(omit) }}"
        id: "{{ item.id }}"
        state: absent
      with_items: "{{ get_vol_facts_out.volumes }}"
      when: force_volume_creation|default()

    - pause:
        seconds: 60
        prompt: "Waiting for volume with restore_snapshot_id: {{ restore_snapshot_id }} completedly removed"

    - name: Create ec2 volumes
      ec2_vol:
        profile: "{{ profile|default(omit) }}"
        region: "{{ region|default(omit) }}"
        name: "{{ vol_item.name|default(omit) }}"
        volume_type: "{{ vol_item.volume_type|default('gp2') }}"
        volume_size: "{{ vol_item.volume_size }}"
        snapshot: "{{ restore_snapshot_id|default(omit) }}"
        iops: "{{ vol_item.iops|default(omit) }}"
        encrypted: "{{ vol_item.encrypted|default('no') }}"
        delete_on_termination: "{{ vol_item.delete_on_termination|default('no') }}"
        kms_key_id: "{{ vol_item.kms_key_id|default(omit) }}"
        state: "present"
        zone: "{{ vol_item.zone }}"
        tags: "{{ vol_item.tags }}"
  when: not get_vol_facts_out.volumes or force_volume_creation|default()
